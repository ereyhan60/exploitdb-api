import pyxploitdb
import os
from flask import Flask, request, jsonify
from dotenv import load_dotenv

load_dotenv()

app = Flask(__name__)

VALID_API_KEYS = os.getenv("VALID_API_KEYS").split(",")

def check_api_key(api_key):
    return api_key in VALID_API_KEYS

@app.route('/search', methods=['GET'])
def search():
    try:
        api_key = request.headers.get('X-API-KEY')
        if not api_key or not check_api_key(api_key):
            return jsonify({'error': 'Invalid or missing API key'}), 401

        keyword = request.args.get('keyword')
        limit = request.args.get('limit')
        platform = request.args.get('platform')

        if not keyword:
            raise ValueError("No keyword provided")

        limit = int(limit) if limit else 20
        limit = 50 if not limit <= 50 else limit

        if not platform:
            platform = ""

        result = pyxploitdb.searchEDB(title=keyword, nb_results=limit, platform=platform)
        return jsonify(result)
    except ValueError as ve:
        return jsonify({'error': str(ve)}), 400
    except Exception as e:
        return jsonify({'error': 'An unexpected error occurred'}), 500

if __name__ == '__main__':
    app.run(debug=True)
